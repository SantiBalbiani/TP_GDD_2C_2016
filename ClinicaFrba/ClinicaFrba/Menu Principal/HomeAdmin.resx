<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAS0AAAC4CAYAAAC2P7qqAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABqNSURBVHhe7Z3Nyy3HccZN4iS+lgPaZnX1Fwj9ATJorZVMHK4gJr5BFycYG0tOCAkRQjtlKbQM
        CmglvDBIS6+CvBPeSCuvshAmEIEhumCiIBTr5nmOTh/N6fPMTE9PT3f1TC1+vO+p+erp7qqurv6Yrz16
        9MhxHKcbpNBxHMcqUug4jmMVKXQcx7GKFDqO41hFCh3HcawihY7jOFaRQsdxHKtIoeM4jlWk0HEcxypS
        6DiOYxUpdBzHsYoUOo7jWEUKHcdxrCKFjuM4VpFCx3Ecq0ih4/zpd773OHgAfgbeBx+DT8CjEXjst4Dn
        vgt47ePq3o6zBil0jgmMzPPgl+AhUIYph98B3vMl9UzHWYoUOscBxuTbZ6Pyf0AZnZL8HvwKPKvS4jgp
        SKGzf2A4fgDY5VPGpQZ89ssqbY4zhRQ6+wWGgl3A/zkbDgv8L3ig0uo4Cil09gcMw5PgP8+GwiL0vJ5U
        aXecIVLo7AsYA44AKkNhkZ+pd3CcgBQ6+wAG4C6w7F2NwakT7nU5Eil0+gdKz9hVjRHBrWDaPdbl3CCF
        Tt9A2V8ZKH/vvKHe0TkuUuj0C5U8Uvo98KZ6V+eYSKHTJ1TuSNn3hBsu54QUOv0Bpd5Tl3AMN1yOG609
        AGU+gsEK/IvKA+c4SKHTD1Birh3kmj6l4HvkC+BrFw+MFDp9AOXl9jHcRUEp9575FPi2NwdFCp0+gOK+
        NVDko/GWyhNn/0ihYx8o7XOREh+R51TeOPtGCh3bQFnZLfxooLxHhXng3cSDIYWObaCorw4U9+i8qvLI
        2S9S6NgFSkovq+R2yL3DvHhC5ZWzT6TQsQsU9N8HCut8ya9UXjn7RAodm0A56WUdaU5WKpy75bGtgyCF
        jk2gmPw0l1JaB3mj8szZH1Lo2ASKyf3UlcI63/neZyrPnP0hhY49oJTc1E8pq/MVvmngAZBCxx5QyA8j
        BXVu+bXKO2dfSKFjDyjkZ5GCOrd8rvLO2RdS6NgCyvhspJzOOL4DxM6RQscWUMS3I8V0xnlb5aGzH6Sw
        d/7sX99+AtwHr4L3zjwaIRznuc8Bc7OroYi/iRTTGec3Kg97BnXymXP9fAuwrn4EVF2mnMd53ovgGXW/
        3pHCHkEBPQVeB2MFuoQPAe/1lHpWbaCI3D9KKahzS/dTH1DvHgdsdN8Fqn4u4SHgfXi/XUzAlcJeYCEA
        tiglDNUYNGD31fNrIRTTmSDOv15APWPDSy9J1cMS0IDx/l2v1ZTCHkDG011mIajC2QIaxurGC0roQfjl
        3FN5aRXUKxqrqRDGFnRrvKTQMshoxp229KzmoOdVLVYABXwxUkhnnhdVXloD9Yg9hS09qxTY+HfVbZRC
        izBjQYk+fileV+ksDRTwtUghnXleU3lpCdQfBtdr9hSmoBNgIn6bghRagxl6zliV4S2h17Wpiw0FfC9S
        SGee91ReWgF1hoM8qj61pgsPVQotgYzkqIeVFknBtG3WSlEBI4V05jFptFBPrPUWFOY/GCKFVkAG0mCp
        jM0lzMkiJQ0h77VJkJ4KGCmkM485o4X6QYNFz1zVnxzY8wh1ueR9Ce9pNs4lhRZAppUyWDQoMtgIGeMK
        JQu8+NdhqICRQjrzmDJaqBclDRYNys1AEGR8Buu5uiYHptek4ZLC1iCzOEKoMnIpzPjZrhvOKTWCU7yr
        SAWMFNKZx5rRKmWwZrtuOIfx31K9CJNdRSlsCTKqVKbzHldBcvymMWRrxAmp8bFSsYab564BCuijh8sx
        M3qIulCqQbwyIPjNpWqsx6zPVx4+flOH1D1yqDJKvgQpbAkyqdQo4WUkBP+PueeXOBT+5zmlWqhiLT0U
        0OdpLcfEKBjqQakeA+vlpauG/1Xo5Ko7h/9LdhVNrWGUQgswowALh5nPIeIQdCRzhi0uZF6jziOXAsH/
        c60iK0ZIA89l2k4tHWB6i48iQgHvRQrpzGNqRjzqBb2isOiZ0KsP9WiqbgYu3g7+533UOeTSWOJ/PlOd
        E6CODNMQ0kb4DOIxra1A5tIdDhlNhoU85ypf3G78T+NzWh1/xkShCaV0JojzrydY5wb1j1zt1oD/58IY
        l9AE/mfDGu7TzeTROaSwd1BAw24fC0wVbmDYOp0qSfhtBSii7/KQzqcqD3sF9fHkxQ9+z3lmVwYu/L8n
        pLB3UFjDeNZSo9V0RwcFFNH300pnV/tpnetkrtEyP1E0BymsDTKXMaphvEj1r0mSi4vzht3DuQD70Cuj
        Kz75DBwP8Ykhw/QO42+nCYDqPkuAIr4TKaYzzjsqD2uB8g4rOEIdGMY+eWxYb2bDDzjntKHl4DfrqKrH
        5KPo2llPC+cM00NCHDkwjL/xGRej2AoprAkyQY2E5DCcIcxKM2xxxp5xVaj4HRtPdU0OqwoaiujB+HSa
        BuFR1nODRKmEOniqj9EzKIvPj+s8u5VD46muyWF1I7wWKawJMqFUZsbEBc2APFu9UIhX3UD+Buo+JVjt
        pkMZP4+U07ml6dd4UM70VFT5lyCei0WPK9Rl1ut43uFWekWKzUPMQQprgZcvOQlOkWQscB7TMdWFLMGq
        kUgo5K8jBXVuafrdQ5QxjYcq+xKwfqaGR7ZMB2k64VQKa8GXjzJjC1iAowYDx4Ibra4tyaoAPxTyQaSg
        zi3NvjCN8mXsVJV7SVhPR9e34hjTUGMXiavYWW2ksBZ8+SgztoKFTQMZJoESutdbutAx3kXcltZdQ9Yt
        Ve5bwC7haf7WGT6bjXONxjfQbN6XFNYALz03Y3dvPFT5sAQopo8ijvMLlWe1QPla3dhvK5rNZ5TCGuCl
        a7ZMVljVOkEx74IvBorqfAnz5K7Ks1qgbGt67RZoNnFVCmuAl+YcEJUZe2b1fltQTt+q5pbmw/CirPfO
        hyofaiCFNcBLs1+uMmPPvKryYglQUPe2rrHgZW051cEscT7UQgprgJc+otEqsqwCSure1ldY8LIOabRA
        k/laUlgDkQFHoIiCQVEfBz6S+GUeNN+JA+V6xFAHabKkRwprIDLgCBTzCqCsvjmgnc3+3GhVRAprIDLg
        CBTtykBpP4iU+Eh8oPKkBShXN1oVkcIaiAw4AqWNFruJR9xri+9sYoNGgnJ1o1URKayByIAjUDxoDOV9
        FhxpNJHv+qzKi1agXN1oVUQKa4AXrrnkwArFjRaBEr80UOq987LKg5agXKf2uNozhzNaR5zysNnqeCjz
        m5Fy75E31bu3BuV61CkPTbroUlgDvHCN1ejWWD25dAoqdaTke8KkwSIo1623WDJJnA+1kMIa4KWPGAfY
        3J2mckfKvgfMGqyAKOu9s0moIwUprAFe+ogLpqvMIIaSvxEpfc+8od7RGijboy2YbvbRDCmsAV66xqZp
        lqi6cRqUnfvK/36g/L3BtJv66OoUKN+jbU2zalPLNUhhLfDiR2qdqrdMUHourv7t2Qj0BNPcdBH0UlC+
        R+s5NNsnXgprgRc/0lDx6m1pcoEB+DfQw1wuprHpJ8DWgDI+yjSeZtvSECmsBV7+KLuXrt61dC0wBk+C
        j8/GwSJM25Mq7b2Act76gxJWaLrmUwprggw4wnytpl8vGQLDwA9kfHI2FBZgWkwsfF4Lyvko87WaLqGS
        wpogA7b83qAVmn4nTgFDQePV0vPis3dhrIagrPcep202ahiQwtogI2p9lacFLQLwz0SMGk0cexr8EnwG
        lHEpCfe/eh88rdJCcOwJcJV+dZ5VUN57b4SbN8BSWBtkxJ4LerNChkJzl4fnwOuAu5k+BMpYJAVOcR4X
        X9OAjd0nh98B3jNp+gLOG9uVlWniMb4r39nMLg8xKPO9elvNvSwihS1AhuwxtlU8lgVlpSfCDQA/BEq5
        x1g8rwbXsAvJkUd6R+zOMf6kdkyljMd4Ds/lNYs/nIpr7oP43lMwD5gXprrfKPc9xrY4Mmoin6WwBciQ
        va3fYiEX8wagmOwqvQuU8qZAT8Wsd8K0ndOo0p4C88ZMVxJlv7e1tZuum12CFLaCGRNlVM8UUSAqIljq
        VY1hZhQzhmmL0poLu5DNjRfKnys+9jJvq+m8rBgpbAkyaA/dxNXGAYr31FkBlWKuwVRXijBNURpLwLxr
        9ul2gnqwh26imW5hQApbggxiC9XzaOKq1e9QNHaTSnkdimar88dgmqI0loR52axbjPrQ+6oPc6O3Utga
        ZBTjWz261hw1ylYQKBe9q1JdwSmaLSmKYVqitG0B87SZ14U60etM+WaLoqeQQgsgw3ozXGsNFkfOSk41
        mKLqjhNTMC1R2raCedtMCVE3ejNcJg0WkUIrION6MVxrDdaW3cExmo8GMQ1RmmrQbDACdaQXw2XWYBEp
        tAQykIuqLU/W48DBGoP1VqRUtaDn0SzAymef06DStjXNJkmirliOcdFBMG2wiBRaAxnJ4LzFVmqVt0Ll
        iZSpNu+qdNWAz47SUpuWhoujitZ6EHQMmo62piKFVkGmcqM1C4XN0c1VoypUmkiJWlF9dIjPjNLQipaG
        iw2xlQmo3HW12QjrUqTQMsxc0MrrosHkBNhVBQxlWbpcZUuqTxzkM6M0tKRpdwh1iQ1xqyk+DG2Ym9Iw
        hxT2ADKbsa5axovGis9aHQOCkljxMoZU2yKGz4qebQELM+i5aUAt48WuoPnY1RhSaBFkMuMAN0aDMkDv
        Z4sC5z0ZOL3xrCDjyOaiGACUY+36uq1gmjbvHvAZ52epNLSkyvsHUG9YZ6WhhJye11bdRja8N8+FjL0X
        qV8WkcJWMNMAWxz2sem6xvGryflFOE5DwmvXjDbyuTSCowYJx5jOm7SBcC0r3o0SQDFaB5+n2HwqAJ8R
        PdMSxQclUAdoCFgfaIRUnRz1cHGMhoS6wGtzG2ReR0PF+4waZRxTXxJiXea1bLRNBeilsCbIEBoAZkyq
        oUkescO5rDQsMFacUHlYGKFAgpxGJrlgcG5qS3ipKFCKGjO/17JZ5eS9o2dZZPVKAZQ56xLrVsqAEc9J
        8vBw3sk7A6HOklCXSZBRl3he6n3Z0Ku0xdAA0rg1N2BSWAO8PAuBhasyaAoWdDM3Fs9mhVDpirmMTH3r
        p6/cfey79/9bKIk1NluXyHtHz7IIZ+cnKXsMyjs3JtV05w08nwZPpWsKXtMsJiaFW4KXzTVWQ1oOVadW
        zIth/cMf/F0PChsovi6R94yeYZlFc+9QzrnGakgT7wXPpVeo0pMKe0fVBzGkcCvwgnRfU9zmFKpnFp6Z
        Ops59rJ6+OZgINvbGON8T/UsiyQF5VHG7FbleCmK6jtv4JmMma01tgGGS4rWmSmksDR8IVCqgANV5xfh
        eXyHVIPbq5cVKLYukfeK7t0Dk++P8qV3VarxDVTdeQPPowOh0pEL86OKIyGFJcGLbLnouVq/Gs9K7dJe
        tZp3nn+g9lS3Dr2N1XFD3MPqFIc5RkepUb5rQxtj0Oup4q3gOQzRqDSUYPM5f1JYCrzAFi3SEN5784LG
        M1JHWMjFkP7JD//hTaEQvbA6bsh7RPfsiasGEeW6RW8hppiHOwWekzr6ncumMWcpLAESToOlXqg0m4++
        4BlLKuvFiH79/o//SyhDT2S7+7h2qykO9Nw4343dTgb4T99GPEMZ54KVWCZ0NW8L5bpm7l8qbIQ3HRnH
        /VNHv9eymeGSwrUgwbUyJrDZ6AvuvcT4Xio6A/BCEXojO26Ia0vH8miokuM+OJddU67xXGPALg0QyzYq
        663YdOcN3L9U8D2FTQyXFK4BCd0yhjXGJqMvuO+S4Du59Oc77xoOWRw3xDUlpzjQ+N00SpAFo0TPiufw
        L3/fhAsgoxeWM4J5eXeWbVTWW7JJQBv3rfkOgeJxZynMBQmkktdwoxXFR19wz6UjLBfl+voLP/kPoQQ9
        snhdHs4vNcVBBnUhZzdwLMBPuVQUyBeNZD72F3/983AtyzYq6y0pPjKOey5tgEtStCckhbkgcWoNUy2K
        jr7gXotHWIbXdzpqOEZygJjnRtfmQMMjKzrkqcH9McNFr2vM4F1x594Lnw2vVWW+IUVH4XC/rUY9Uyiq
        m1KYAxJVO46lKDb6gnstHSm6dFF3Es+KmQ0Q45wSUxymDNZSgyi7WZBzkCApnSzLcB3LOCrzLSk2Mo77
        7Eo3pTAHJKpmgY5RZPQF98gp5Mso5p0f/5PFPaPWMhs3xDlrpzhMGawcgzga1MaxpNFNlmW4hmUclfnW
        FBkZx30s6CYpMjIqhUtBYmpNb0hh9egL7pEzwnJpSf7ob//+HaUAO2A0QIxjJaY4jMYlcSxnt9eH6l4B
        HJ81sizLcD7LOCrzGqyKB+F6S7pZZDRRCpeCxNQcRk0he/QF1+aOsFye2enSnRRGZ4rj2Np3nqzQOJ4V
        K4vvMwTHZ/f3YlmG81nGUZnXIHtkHNcy+G5NN1d7W1K4BCTCQn85Jmv0BdetGWG5GK0djRwqbgLEkJWY
        4jA5NI7jRY0WjiXFtViW4RqWcVTmtcgaGcd1LTzDOVZ7W1K4BCYiSpQVFs8PwTVrYhYXo/XHf/XDT5QC
        7AQq+lWAGL9LTHGY9ChwPMdoSc8Q8uRAPMsyXMcyjsq8Fou/CI5rOPpdcooD78XY2NopTasHGKQwFT58
        kBhrLMocnLt2EenF7X3sz7//vlKAHXFpLfF/iSkOgdFhfhzLiWndjFhBFhusyRnzkdHacqHxHItG33D+
        WmeC+sN7SC8PcubFkl1ah6yacCqFqeDhazcR25rk0Recu2aE5cpLQGXfa0xrCJV/i69ESyWBfOnoofII
        YwNLg8X7DmVXGDJaNAxJ8SCct8Yj5HPYrbzKO/ymrlNOGNy/HOf/Z3mq8VrVRZTCVPjwKDEWmS1onLOm
        kG+8gzv3XvhYKcDOoGHeYhcHGpuxaQ+pU0mu7oH/1TKek8E6Hx/KrzAS0wokKTvOy22A2fW70hf8prFS
        xoiyK48Jv2m8UtZoTo7qziGFqeDhrZbsLGF29AXn5IywsNDGlEsqgJPMlOGaM5Q0pvQA6QnSyKl425UH
        Lo5fiEYPLUwfmBwZx/HcNN4YRMhS7nXT1YMsxZnJnsohhamIhFhltKBxLGeKw6jBIqryO4uh4ZLlBnlu
        HI3e1dU98Xuye8iF7+FclLmF0bjRRhjHcqc4KIOVOpIuvSbI5xya7LiWFKaAh7Z2lZcgR18gTy2YmNEM
        R0VnKy8VwMlCBqAhpyeV+h1JnndTZpDN7v4QzYhP6frUQNY/yHOMKo3LzYAVZEsa85vGBbI53cpe1iOF
        KeChPRktcpNJkOVMcZiMK6CiUxGkAjjZ3HhIg/ymp8SRRXpf7DqGWBt/c/7YjUJCxjJKGiz55osvPx2u
        Q9lbWQ5DYxAHynOnOMiYL+RLdOMmrgvZnNHKXrkihSngoS325lnDVUHj/9yRIDda7aChyd6CiNee76Hu
        LRlej7LPMQpbcdUI43fuoNiY0VpyP+VpzV0/G2seQwpTwEMt9O+XcjE4+H9NqylbfYKKXnLekqNhvIve
        FD2sKQ+MDQiD8ewe8hp1r1G+8Zd/8+nwnqIetOZkcPB3Ta9HGg/Il+h3POKY4qW50VoAN3Nb27VlsPOm
        20FQ2d1o7QQjs+GnOHWx8Hdtt1WFTlI3PRw6AuwSDtPCeNmYAWtitCytHl8CM7XEIlIZwERl32LuktOA
        P3jw0gehXFHWVmO4peZKqqkLcx7TSQfO0B4Mu8/UM8rHnJsmMa3eAvFbcGO4UNkXxUwcu0RztHrtWSzh
        ynDhd+w5DeFIKg0VjWYc67t4bvw/OnZzzlKkMAU8tOWSBkvQcA1nX7vR2gl3fvSPrw3qe85Ic4+oriIN
        T8ogBA3YJb7F/wH1Q507GheeQwpTEQk5KizQk+FCZXejtROiOVpr40Y9wXe9mjyN36ELSMPE4wH+pnw4
        Mj/VLTwRzs1BClPBw8es6BE5DcWjsqdOeHSM43X9ZJCSp5jgXAbv6ZHOeWWrvjYkhang4UdqfeY4udWo
        7D56uBOiuq7K/CjQCDGGRe+JXhXj2YRzNSnjsZTuY2ByruMcUpgKHn6Ufn4Kp9EQVHafXLoDDG1Js0dG
        901LQQpTwcMn+60H47S+ERV+cgGu0wcdzNHqmewdHogUpoKHW98EsCohX1DpJ3fDdOwTTXfobcmaaUK+
        5iKFqSAB3gJdcxrGRaX3CaadY+DTYXsleyZ8QAqXIBJ1ZE59dVT6PX6s9VAY3ZJmD6z+AK0ULkEk6sic
        CgSV3oPxnfPNn/zzvUEd91HycozuRZeKFC4BifAC/YqL66sUwemHUI5ElLOTj9wKZwlSuAQkwo3WV1y2
        nkXF92B8pzz23ftfRHVclbWznFUftAhI4RKQEA9SXnNqSVD5PRjfKT7dYTNWB+GJFC4BCfHh4GvCCKIH
        4zsl+myYT+spR/bODkOkcAlIiLdE14TlPB6M75QDbklTi+ytsodI4RKQkNQdDo/CZXMzpRCOfaLPhvlS
        tXKsDsITKVyKSNyRuaxghwJ4ML5DDrwlzZbIz/jlIIVLYYKiBB6akC9QAA/Gd0j02TCv22XI3l45RgqX
        ggR5a3SNB+M7Jqrbqnyd5RQJwhMpXAoSxM3CVEKPymnWLxSAX0GWiuHY5M7zDz4f1GvfkqYc2dsrx0jh
        UpAgH2G55tKqKMVw7OJztDZDfnIvBylcChLE3QxVQo/KcDmP7xnfEdFnw3wOYhlWba8cI4VLQaK8Rbpm
        uJzn9VgxHLv4HK1NWLW9cowULgWJ4tc3VGKPzMkdhiLw0+1SQRx7RJ8N8y1pyrBqe+UYKcxBJPTohBFE
        D8Z3hM/R2oRiQXgihTkgYf45sWs8GN8h3/rpK3cHdVqVq7OQkJ+lkMIckDhvla659OOhDB6M74RQZkSU
        qbOcIjs7DJHCHJA4D1peM1zO48H4DvDpDpuwenvlGCnMAYlzoxUR8gYK4cH4DoiMlm9JU4bV2yvHSGEO
        SJy3TLecvu8GhfBgfAf4dIdNWPWNQ4UU5oDEudG65TJqopTEsYUbrfKE/CyJFDqO41hFCh3HcawihY7j
        OFaRQsdxHKtIoeM4jlWk0HEcxypS6DiOYxUpdBzHsYoUOo7jWEUKHcdxrCKFjuM4VpFCx3Ecq0ih4ziO
        VaTQcRzHKlLoOI5jFSl0HMexyaOv/T8Pr5FNtyXpVgAAAABJRU5ErkJggg==
</value>
  </data>
</root>